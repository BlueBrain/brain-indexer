name: Run C++ tests and lint

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-14"]
        boost_minor: [85]
    #     python-version: ['3.11', '3.12']
    #     toxenv: ['py3']
    #     include:
    #       - python-version: '3.12'
    #         toxenv: 'lint'
    #       - python-version: '3.12'
    #         toxenv: 'coverage'

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Ubuntu system dependencies
      if: startsWith(matrix.os, 'ubuntu-')
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build libopenmpi-dev

    - name: Install MacOs system dependencies
      if: startsWith(matrix.os, 'macos-')
      run: |
        brew install ninja openmpi

    - name: Cache Boost
      id: cache-boost
      uses: actions/cache@v3
      env:
        cache-name: cache-boost
      with:
        path: ${{ github.workspace }}/boost
        key: ${{ matrix.os }}-boost-${{ matrix.boost_minor }}

    - name: Install Boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        wget -qO- https://boostorg.jfrog.io/artifactory/main/release/1.${{ matrix.boost_minor }}.0/source/boost_1_${{ matrix.boost_minor }}_0.tar.bz2 | tar xjf -
        cd boost_1_${{ matrix.boost_minor }}_0
        ./bootstrap.sh
        ./b2 --prefix=../boost --with-serialization --with-filesystem --with-test install

    - name: Configure and build
      run: |
        cmake -B build -G Ninja -DCMAKE_PREFIX_PATH=$PWD/boost .
        cmake --build build

    - name: Set up MPI for Github Actions
      run: |
        mkdir -p "$HOME/.openmpi"
        cat <<EOF > "$HOME/.openmpi/mca-params.conf"
        rmaps_base_oversubscribe = true
        rmaps_default_mapping_policy = :oversubscribe
        EOF

    - name: Run CTest
      run: |
        ctest --test-dir build --output-on-failure

    - name: Run Tox
      run: |
        export CMAKE_PREFIX_PATH=$PWD/boost
        tox -e py3
