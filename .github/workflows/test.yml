name: Run Python tests and lint

on:
  workflow_run:
    workflows:
      - Cache Boost
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        toxenv: ['py3']
        include:
          - python-version: '3.12'
            toxenv: 'flake8'
          - python-version: '3.12'
            toxenv: 'coverage'

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_PAT }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev

    - name: Cache Boost
      id: cache-boost
      uses: actions/cache@v3
      env:
        cache-name: cache-boost
      with:
        path: ${{ github.workspace }}/boost
        key: ${{ matrix.os }}-boost-${{ matrix.boost_minor }}

    - name: Install Boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        wget -qO- https://boostorg.jfrog.io/artifactory/main/release/1.${{ matrix.boost_minor }}.0/source/boost_1_${{ matrix.boost_minor }}_0.tar.bz2 | tar xjf -
        cd boost_1_${{ matrix.boost_minor }}_0
        ./bootstrap.sh
        ./b2 --prefix=../boost --with-serialization --with-filesystem --with-test install

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox

    - name: Test with tox
      run: |
        export CMAKE_PREFIX_PATH=$PWD/boost
        tox -e ${{ matrix.toxenv }}

    - name: Get coverage
      if:
        matrix.toxenv == 'coverage' && github.event_name == 'pull_request'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        files: ./coverage.xml
        flags: pytest
        name: "brain-indexer-py312"
